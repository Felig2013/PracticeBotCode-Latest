// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4230.practice2018.subsystems;

import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc4230.practice2018.RobotMap;
import org.usfirst.frc4230.practice2018.commands.*; 
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

    // END CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class drivetrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX left1 = RobotMap.drivetrainleft1;
    private final WPI_TalonSRX left2 = RobotMap.drivetrainleft2;
    private final WPI_TalonSRX right1 = RobotMap.drivetrainright1;
    private final WPI_TalonSRX right2 = RobotMap.drivetrainright2;
    public static DifferentialDrive DriveSys; 

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new Teleop_Drive());
        CANSparkMax m_frontLeft = new CANSparkMax(1, MotorType.kBrushless);
	    CANSparkMax m_rearLeft = new CANSparkMax(2, MotorType.kBrushless);
	    SpeedControllerGroup m_left = new SpeedControllerGroup(m_frontLeft, m_rearLeft);

	    CANSparkMax m_frontRight = new CANSparkMax(3, MotorType.kBrushless);
	    CANSparkMax m_rearRight = new CANSparkMax(4, MotorType.kBrushless);
	    SpeedControllerGroup m_right = new SpeedControllerGroup(m_frontRight, m_rearRight);
        DriveSys = new DifferentialDrive(m_left, m_right);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        DriveSys.arcadeDrive(Robot.oi.driver.getY(),  Robot.oi.driver.getX());
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

